import { BaseServiceIO } from '../services/utils/baseServiceIO';
import { MessageContentI } from '../types/messagesInternal';
import * as WebLLM from '../types/webModel/webLLM/webLLM';
import { Messages } from '../views/chat/messages/messages';
import { DeepChat } from '../deepChat';
declare global {
    interface Window {
        webLLM: typeof WebLLM;
    }
}
export declare class WebModel extends BaseServiceIO {
    private readonly chat?;
    private static readonly DOWNLOAD_BUTTON_CLASS;
    private readonly _selectedModel;
    private _isModelLoaded;
    private _isModelLoading;
    private _loadOnFirstMessage;
    constructor(deepChat: DeepChat);
    private addInitialMessage;
    private canSubmit;
    private configureLoad;
    private loadModel;
    private immediateResp;
    private static callbackUpdateResponse;
    private streamResp;
    private generateResp;
    callServiceAPI(messages: Messages, pMessages: MessageContentI[], __?: File[]): Promise<void>;
    private unloadChat;
    isWebModel(): boolean;
}
//# sourceMappingURL=webModel.d.ts.map