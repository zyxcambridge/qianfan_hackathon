{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"deep-chat\";\nimport axios from 'axios';\nimport imgUrl from '../assets/logo.png';\nexport default {\n  data() {\n    return {\n      introMessage: {\n        text: \"您好！我将会问您三个问题，请依次回答它们。\"\n      },\n      initialMessages: [{\n        text: \"您好！请问您的职业是什么，可以简单地介绍一下自己吗？\",\n        role: \"ai\"\n      }],\n      questions: [\"请告诉我您对人工通用智能（AGI）的了解程度，是否有相关学术或实践经验？\", \"在AI的世界中，哪些特定的领域或话题让您特别感兴趣？或者有没有什么特别的人物、事件或术语让您好奇，您希望深入了解？\"],\n      currentQuestionIndex: 0,\n      userAnswers: [],\n      messageStyles: {\n        default: {\n          user: {\n            bubble: {\n              backgroundColor: \"#2670ff\"\n            }\n          },\n          ai: {\n            bubble: {\n              backgroundColor: \"#004f97\",\n              color: \"white\"\n            }\n          }\n        }\n      },\n      submitButtonStyles: {\n        submit: {\n          svg: {\n            styles: {\n              default: {\n                filter: \"brightness(0) saturate(100%) invert(60%) sepia(79%) saturate(643%) hue-rotate(185deg) brightness(102%) contrast(100%)\"\n              }\n            }\n          }\n        }\n      },\n      textInputStyles: {\n        styles: {\n          container: {\n            backgroundColor: \"#004f97\",\n            color: \"white\",\n            boxShadow: \"unset\"\n          }\n        },\n        placeholder: {\n          style: {\n            color: \"#d1d1d1\"\n          }\n        }\n      },\n      auxiliaryStyle: `\n        ::-webkit-scrollbar-thumb {\n          background-color: #0174db;\n        }\n        ::-webkit-scrollbar-track {\n          background-color: unset;\n        }\n      `\n    };\n  },\n  computed: {\n    chatRequest() {\n      return {\n        handler: this.handleMessage\n      };\n    }\n  },\n  methods: {\n    sidebarClick() {\n      const synth = window.speechSynthesis;\n      synth.pause();\n      const amIPaused = synth.paused; // will return true\n      alert(\"开始场景对话练习：开会惊艳当场！\");\n    },\n    async handleMessage(body, signals) {\n      if (this.currentQuestionIndex === 0) {\n        // 第一个问题的答案前加上 '职业和介绍'\n        this.userAnswers.push('职业和介绍: ' + body.messages[0].text);\n        console.log('第一个', this.currentQuestionIndex, this.userAnswers);\n      } else if (this.currentQuestionIndex === 1) {\n        // 第二个问题的答案前加上 'AGI了解程度'\n        this.userAnswers.push('AGI了解程度: ' + body.messages[0].text);\n        console.log('第二个', this.currentQuestionIndex, this.userAnswers);\n      } else if (this.currentQuestionIndex === 2) {\n        // 第三个问题的答案前加上 '感兴趣的特定领域和话题'\n        this.userAnswers.push('感兴趣的特定领域和话题: ' + body.messages[0].text);\n        console.log('第三个', this.currentQuestionIndex, this.userAnswers);\n      }\n      console.log(body.messages[0].text);\n      console.log(this.userAnswers);\n      console.log(this.currentQuestionIndex);\n      if (this.currentQuestionIndex < this.questions.length) {\n        // 提出下一个问题\n        signals.onResponse({\n          text: this.questions[this.currentQuestionIndex],\n          role: \"ai\"\n        });\n        this.currentQuestionIndex++;\n      } else if (this.currentQuestionIndex == this.questions.length) {\n        // 所有问题都已回答，发送答案到后端\n        const data = await this.sendAnswersToBackend();\n        console.log(data);\n        console.log('data.response', data.response);\n        signals.onResponse({\n          text: data.response,\n          role: \"ai\"\n        });\n      }\n    },\n    async sendAnswersToBackend() {\n      const combinedAnswers = this.userAnswers.join(','); // 将答案数组转换为一个字符串\n      console.log('combined', combinedAnswers);\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/process_input/', combinedAnswers, {\n          headers: {\n            'Content-Type': 'text/plain'\n          }\n        });\n        const data = response.data;\n        // 处理或显示后端响应\n        console.log(data);\n        return data; // 返回后端响应\n      } catch (error) {\n        console.error('API 请求错误:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","imgUrl","data","introMessage","text","initialMessages","role","questions","currentQuestionIndex","userAnswers","messageStyles","default","user","bubble","backgroundColor","ai","color","submitButtonStyles","submit","svg","styles","filter","textInputStyles","container","boxShadow","placeholder","style","auxiliaryStyle","computed","chatRequest","handler","handleMessage","methods","sidebarClick","synth","window","speechSynthesis","pause","amIPaused","paused","alert","body","signals","push","messages","console","log","length","onResponse","sendAnswersToBackend","response","combinedAnswers","join","post","headers","error"],"sources":["/Users/zhangyixin/Desktop/hackathon-baidu/AGInsider/front_page/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <!-- demo/textInput are examples of passing an object directly into a property (if this does not work refer to data values like in the initialMessages example) -->\n  <!-- initialMessages is an example of passing a data object into a property -->\n  <div id=\"app\">\n    <div class=\"main-container\">\n      <div class=\"left-container\">\n        <div style = \"margin-top:20px;\">\n        <h2>AGInsider</h2>\n        </div>\n        <div class=\"chat\">\n          <deep-chat \n            textToSpeech='{\"volume\": \"0.9\"}'\n            introMessage='{\"text\": \"Send a message to hear the response.\"}'\n            style=\"border-radius: 8px\"\n            demo=\"true\"\n            speechToText='{\n              \"webSpeech\": true,\n              \"translations\": {\"hello\": \"goodbye\", \"Hello\": \"Goodbye\"},\n              \"commands\": {\"resume\": \"resume\", \"settings\": {\"commandMode\": \"hello\"}},\n              \"button\": {\"position\": \"outside-left\"}\n            }'\n\n            class=\"wide-chat\"\n            :initialMessages=\"initialMessages\"\n            :request=\"chatRequest\"\n            :messageStyles=\"messageStyles\"\n            :submitButtonStyles=\"submitButtonStyles\"\n            :textInput=\"textInputStyles\"\n            :auxiliaryStyle=\"auxiliaryStyle\"\n            :avatars='{\"ai\": {src: imgUrl}}'\n\n            gifs='{\"button\": {\"position\": \"dropup-menu\"}}'\n            audio='{\"button\": {\"position\": \"dropup-menu\"}}'\n            camera='{\"button\": {\"position\": \"dropup-menu\"}}'\n            mixedFiles='{\"button\": {\"position\": \"inside-left\"}}'\n          ></deep-chat>\n        </div>\n      </div>\n      <div class=\"sidebar\" @click=\"sidebarClick\">\n        <div class =\"top-bar\" />\n        <img src=\"..\\assets\\mascot-20231126110627.gif\"/>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport \"deep-chat\";\nimport axios from 'axios';\nimport imgUrl from '../assets/logo.png';\n\n\nexport default {\n  data() {\n    return {\n      introMessage: { text: \"您好！我将会问您三个问题，请依次回答它们。\" },\n      initialMessages: [\n        { text: \"您好！请问您的职业是什么，可以简单地介绍一下自己吗？\", role: \"ai\" },\n      ],\n      questions: [\n        \"请告诉我您对人工通用智能（AGI）的了解程度，是否有相关学术或实践经验？\",\n        \"在AI的世界中，哪些特定的领域或话题让您特别感兴趣？或者有没有什么特别的人物、事件或术语让您好奇，您希望深入了解？\",\n      ],\n      currentQuestionIndex: 0,\n      userAnswers: [],\n      messageStyles: {\n        default: {\n          user: {\n            bubble: { backgroundColor: \"#2670ff\" }\n          },\n          ai: {\n            bubble: { backgroundColor: \"#004f97\", color: \"white\" }\n          }\n        }\n      },\n      submitButtonStyles: {\n        submit: {\n          svg: {\n            styles: {\n              default: {\n                filter: \"brightness(0) saturate(100%) invert(60%) sepia(79%) saturate(643%) hue-rotate(185deg) brightness(102%) contrast(100%)\"\n              }\n            }\n          }\n        }\n      },\n      textInputStyles: {\n        styles: {\n          container: {\n            backgroundColor: \"#004f97\",\n            color: \"white\",\n            boxShadow: \"unset\"\n          }\n        },\n        placeholder: { style: { color: \"#d1d1d1\" } }\n      },\n      auxiliaryStyle: `\n        ::-webkit-scrollbar-thumb {\n          background-color: #0174db;\n        }\n        ::-webkit-scrollbar-track {\n          background-color: unset;\n        }\n      `\n    };\n  },\n  computed: {\n    chatRequest() {\n      return {\n        handler: this.handleMessage\n      };\n    }\n  },\n  methods: {\n    sidebarClick(){\n      const synth = window.speechSynthesis;\n      synth.pause();\n      const amIPaused = synth.paused; // will return true\n      alert(\"开始场景对话练习：开会惊艳当场！\")\n    },\n    async handleMessage(body, signals) {\n      if (this.currentQuestionIndex === 0) {\n      // 第一个问题的答案前加上 '职业和介绍'\n        this.userAnswers.push('职业和介绍: ' + body.messages[0].text);\n        console.log('第一个',this.currentQuestionIndex, this.userAnswers);\n      } else if (this.currentQuestionIndex === 1) {\n        // 第二个问题的答案前加上 'AGI了解程度'\n        this.userAnswers.push('AGI了解程度: ' + body.messages[0].text);\n        console.log('第二个',this.currentQuestionIndex, this.userAnswers);\n      } else if (this.currentQuestionIndex === 2) {\n        // 第三个问题的答案前加上 '感兴趣的特定领域和话题'\n        this.userAnswers.push('感兴趣的特定领域和话题: ' + body.messages[0].text);\n        console.log('第三个',this.currentQuestionIndex, this.userAnswers)\n      }\n      console.log(body.messages[0].text)\n      console.log(this.userAnswers)\n      console.log(this.currentQuestionIndex);\n      if (this.currentQuestionIndex < this.questions.length) {\n        // 提出下一个问题\n        signals.onResponse({ text: this.questions[this.currentQuestionIndex], role: \"ai\" });\n        this.currentQuestionIndex++;\n      } else if(this.currentQuestionIndex == this.questions.length){\n        // 所有问题都已回答，发送答案到后端\n        const data = await this.sendAnswersToBackend();\n        console.log(data)\n        console.log('data.response', data.response)\n        signals.onResponse({ text: data.response, role: \"ai\"  });\n      }\n    },\n    async sendAnswersToBackend() {\n      const combinedAnswers = this.userAnswers.join(','); // 将答案数组转换为一个字符串\n      console.log('combined', combinedAnswers)\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/process_input/', combinedAnswers, {\n          headers: {\n            'Content-Type': 'text/plain'\n          }\n        });\n        const data = response.data;\n        // 处理或显示后端响应\n        console.log(data);\n        return data;  // 返回后端响应\n      } catch (error) {\n        console.error('API 请求错误:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n\n /* 全局样式 */\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  /* 应用的基础样式 */\n  #app {\n    font-family: sans-serif;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n  }\n\n  /* 头部标题样式 */\n  h2 {\n    text-align: center;\n    padding: 20px 0;\n  }\n\n  /* 主容器样式 */\n  .main-container {\n    display: flex;\n    flex: 1;\n  }\n\n  /* 聊天容器样式 */\n  .left-container {\n    display:flex;\n    flex: 1;\n    flex-direction: column; /* 子元素垂直排列 */\n    align-items: center; /* 水平居中 */\n    /* 如果需要滚动，可以取消注释以下样式 */\n    /* overflow-y: auto; */\n  }\n  \n  .chat{\n    margin-top: 20px;\n    justify-content: center; /* 垂直居中 */\n    align-items: center; /* 水平居中 */\n  }\n\n  /* 聊天框样式 */\n  .wide-chat {\n    /* 根据需要调整宽度 */\n    width: 800px !important; \n    height: 1000px !important;\n  }\n\n  /* 侧边栏样式 */\n  .sidebar {\n    width: 400px; /* 侧边栏宽度，您可以根据需要进行调整 */\n  }\n\n  /* 侧边栏图片样式 */\n  .sidebar img {\n    margin-top:100px;\n    margin-right:100px;\n    width: 100%;\n    height: auto;\n    /* 如果需要边框圆角，可以取消注释以下样式 */\n    /* border-radius: 5px; */\n  }\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}