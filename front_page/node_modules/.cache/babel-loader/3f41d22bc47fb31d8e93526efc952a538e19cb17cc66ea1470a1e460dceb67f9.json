{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/mascot.png';\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"main-container\"\n};\nconst _hoisted_3 = {\n  class: \"left-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"margin-top\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"AGInsider\")], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"chat\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"top-bar\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_6, _hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_deep_chat = _resolveComponent(\"deep-chat\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" demo/textInput are examples of passing an object directly into a property (if this does not work refer to data values like in the initialMessages example) \"), _createCommentVNode(\" initialMessages is an example of passing a data object into a property \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_deep_chat, {\n    class: \"wide-chat\",\n    initialMessages: $data.initialMessages,\n    request: $options.chatRequest,\n    messageStyles: $data.messageStyles,\n    submitButtonStyles: $data.submitButtonStyles,\n    textInput: $data.textInputStyles,\n    auxiliaryStyle: $data.auxiliaryStyle,\n    avatars: {\n      \"ai\": {\n        src: _ctx.imgUrl\n      }\n    }\n  }, null, 8 /* PROPS */, [\"initialMessages\", \"request\", \"messageStyles\", \"submitButtonStyles\", \"textInput\", \"auxiliaryStyle\", \"avatars\"])])]), _createElementVNode(\"div\", {\n    class: \"sidebar\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.sidebarClick && $options.sidebarClick(...args))\n  }, [..._hoisted_8])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","id","class","_createElementVNode","style","src","_hoisted_6","_hoisted_7","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_deep_chat","initialMessages","$data","request","$options","chatRequest","messageStyles","submitButtonStyles","textInput","textInputStyles","auxiliaryStyle","avatars","_ctx","imgUrl","onClick","_cache","args","sidebarClick"],"sources":["/Users/zhangyixin/Desktop/hackathon-baidu/AGInsider/front_page/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <!-- demo/textInput are examples of passing an object directly into a property (if this does not work refer to data values like in the initialMessages example) -->\n  <!-- initialMessages is an example of passing a data object into a property -->\n  <div id=\"app\">\n    <div class=\"main-container\">\n      <div class=\"left-container\">\n        <div style = \"margin-top:20px;\">\n        <h2>AGInsider</h2>\n        </div>\n        <div class=\"chat\">\n          <deep-chat \n            class=\"wide-chat\"\n            :initialMessages=\"initialMessages\"\n            :request=\"chatRequest\"\n            :messageStyles=\"messageStyles\"\n            :submitButtonStyles=\"submitButtonStyles\"\n            :textInput=\"textInputStyles\"\n            :auxiliaryStyle=\"auxiliaryStyle\"\n            :avatars='{\"ai\": {src: imgUrl}}'\n\n      \n\n          ></deep-chat>\n        </div>\n      </div>\n      <div class=\"sidebar\" @click=\"sidebarClick\">\n        <div class =\"top-bar\" />\n        <img src=\"..\\assets\\mascot.png\"/>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport \"deep-chat\";\nimport axios from 'axios';\nimport imgUrl from '../assets/logo.png';\n\nexport default {\n  data() {\n    return {\n      introMessage: { text: \"您好！我将会问您三个问题，请依次回答它们。\" },\n      initialMessages: [\n        { text: \"您好！请问您的职业是什么，可以简单地介绍一下自己吗？\", role: \"ai\" },\n      ],\n      questions: [\n        \"请告诉我您对人工通用智能（AGI）的了解程度，是否有相关学术或实践经验？\",\n        \"在AI的世界中，哪些特定的领域或话题让您特别感兴趣？或者有没有什么特别的人物、事件或术语让您好奇，您希望深入了解？\",\n      ],\n      currentQuestionIndex: 0,\n      userAnswers: [],\n      messageStyles: {\n        default: {\n          user: {\n            bubble: { backgroundColor: \"#2670ff\" }\n          },\n          ai: {\n            bubble: { backgroundColor: \"#004f97\", color: \"white\" }\n          }\n        }\n      },\n      submitButtonStyles: {\n        submit: {\n          svg: {\n            styles: {\n              default: {\n                filter: \"brightness(0) saturate(100%) invert(60%) sepia(79%) saturate(643%) hue-rotate(185deg) brightness(102%) contrast(100%)\"\n              }\n            }\n          }\n        }\n      },\n      textInputStyles: {\n        styles: {\n          container: {\n            backgroundColor: \"#004f97\",\n            color: \"white\",\n            boxShadow: \"unset\"\n          }\n        },\n        placeholder: { style: { color: \"#d1d1d1\" } }\n      },\n      auxiliaryStyle: `\n        ::-webkit-scrollbar-thumb {\n          background-color: #0174db;\n        }\n        ::-webkit-scrollbar-track {\n          background-color: unset;\n        }\n      `\n    };\n  },\n  computed: {\n    chatRequest() {\n      return {\n        handler: this.handleMessage\n      };\n    }\n  },\n  methods: {\n    sidebarClick(){\n      alert(\"开始场景对话练习：开会惊艳当场！\")\n    },\n    async handleMessage(body, signals) {\n      if (this.currentQuestionIndex === 0) {\n      // 第一个问题的答案前加上 '职业和介绍'\n        this.userAnswers.push('职业和介绍: ' + body.messages[0].text);\n        console.log('第一个',this.currentQuestionIndex, this.userAnswers);\n      } else if (this.currentQuestionIndex === 1) {\n        // 第二个问题的答案前加上 'AGI了解程度'\n        this.userAnswers.push('AGI了解程度: ' + body.messages[0].text);\n        console.log('第二个',this.currentQuestionIndex, this.userAnswers);\n      } else if (this.currentQuestionIndex === 2) {\n        // 第三个问题的答案前加上 '感兴趣的特定领域和话题'\n        this.userAnswers.push('感兴趣的特定领域和话题: ' + body.messages[0].text);\n        console.log('第三个',this.currentQuestionIndex, this.userAnswers)\n      }\n      console.log(body.messages[0].text)\n      console.log(this.userAnswers)\n      console.log(this.currentQuestionIndex);\n      if (this.currentQuestionIndex < this.questions.length) {\n        // 提出下一个问题\n        signals.onResponse({ text: this.questions[this.currentQuestionIndex], role: \"ai\" });\n        this.currentQuestionIndex++;\n      } else if(this.currentQuestionIndex == this.questions.length){\n        // 所有问题都已回答，发送答案到后端\n        const data = await this.sendAnswersToBackend();\n        console.log(data)\n        console.log('data.response', data.response)\n        signals.onResponse({ text: data.response, role: \"ai\"  });\n      }\n    },\n    async sendAnswersToBackend() {\n      const combinedAnswers = this.userAnswers.join(','); // 将答案数组转换为一个字符串\n      console.log('combined', combinedAnswers)\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/process_input/', combinedAnswers, {\n          headers: {\n            'Content-Type': 'text/plain'\n          }\n        });\n        const data = response.data;\n        // 处理或显示后端响应\n        console.log(data);\n        return data;  // 返回后端响应\n      } catch (error) {\n        console.error('API 请求错误:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n\n /* 全局样式 */\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  /* 应用的基础样式 */\n  #app {\n    font-family: sans-serif;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n  }\n\n  /* 头部标题样式 */\n  h2 {\n    text-align: center;\n    padding: 20px 0;\n  }\n\n  /* 主容器样式 */\n  .main-container {\n    display: flex;\n    flex: 1;\n  }\n\n  /* 聊天容器样式 */\n  .left-container {\n    display:flex;\n    flex: 1;\n    flex-direction: column; /* 子元素垂直排列 */\n    align-items: center; /* 水平居中 */\n    /* 如果需要滚动，可以取消注释以下样式 */\n    /* overflow-y: auto; */\n  }\n  \n  .chat{\n    margin-top: 20px;\n    justify-content: center; /* 垂直居中 */\n    align-items: center; /* 水平居中 */\n  }\n\n  /* 聊天框样式 */\n  .wide-chat {\n    /* 根据需要调整宽度 */\n    width: 500px !important; \n    height: 800px !important;\n  }\n\n  /* 侧边栏样式 */\n  .sidebar {\n    width: 400px; /* 侧边栏宽度，您可以根据需要进行调整 */\n  }\n\n  /* 侧边栏图片样式 */\n  .sidebar img {\n    margin-top:100px;\n    margin-right:100px;\n    width: 100%;\n    height: auto;\n    /* 如果需要边框圆角，可以取消注释以下样式 */\n    /* border-radius: 5px; */\n  }\n</style>\n\n"],"mappings":";OA2BaA,UAA0B;;EAxBhCC,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAgB;gCACzBC,mBAAA,CAEM;EAFDC,KAA0B,EAA1B;IAAA;EAAA;AAA0B,I,aAC/BD,mBAAA,CAAkB,YAAd,WAAS,E;;EAERD,KAAK,EAAC;AAAM;gCAiBjBC,mBAAA,CAAwB;EAAnBD,KAAK,EAAE;AAAS;gCACrBC,mBAAA,CAAiC;EAA5BE,GAA0B,EAA1BL;AAA0B;oBAD/BM,UAAwB,EACxBC,UAAiC,C;;;6DA1BvCC,mBAAA,gKAAmK,EACnKA,mBAAA,4EAA+E,EAC/EL,mBAAA,CA2BM,OA3BNM,UA2BM,GA1BJN,mBAAA,CAyBM,OAzBNO,UAyBM,GAxBJP,mBAAA,CAmBM,OAnBNQ,UAmBM,GAlBJC,UAEM,EACNT,mBAAA,CAcM,OAdNU,UAcM,GAbJC,YAAA,CAYaC,oBAAA;IAXXb,KAAK,EAAC,WAAW;IAChBc,eAAe,EAAEC,KAAA,CAAAD,eAAe;IAChCE,OAAO,EAAEC,QAAA,CAAAC,WAAW;IACpBC,aAAa,EAAEJ,KAAA,CAAAI,aAAa;IAC5BC,kBAAkB,EAAEL,KAAA,CAAAK,kBAAkB;IACtCC,SAAS,EAAEN,KAAA,CAAAO,eAAe;IAC1BC,cAAc,EAAER,KAAA,CAAAQ,cAAc;IAC9BC,OAAO;MAAA;QAAArB,GAAA,EAAesB,IAAA,CAAAC;MAAM;IAAA;gJAOnCzB,mBAAA,CAGM;IAHDD,KAAK,EAAC,SAAS;IAAE2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,QAAA,CAAAa,YAAA,IAAAb,QAAA,CAAAa,YAAA,IAAAD,IAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}